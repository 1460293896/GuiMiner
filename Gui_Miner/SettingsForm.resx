<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAA9i6DAPQuggr9MIey/zCI//8wiP//MIj/+i+F/9gmcf/RJG3/8S2A//8wiP//MIj//zCI//8w
        iP/5L4X/1iVw/9Akbf/QJG3/0CRt/88kbf/dJ3X//jCI//cuhP/VJXD/0CRt/9Akbf/QJG3/zyRsrcYi
        aAjII2kAAAAAAOUrewD/MIgA+y+GTP8wiPL/MIj//zCI//8wiP/uLH7/0SRt/9Ilbv/1LYL//zCI//8w
        iP//MIj//zCI//kvhf/WJXD/0CRt/9Akbf/QJG3/zyRt/9onc//9L4f//jCI/+Aod//PJG3/0CRt/9Ak
        bf/QJG3wzSRrR9AkbQC4IGAA9y+EAPYugw79MIe4/zCI//8wiP//MIj//TCH/94odf/PJGz/1CVv//gu
        hP//MIj//zCI//8wiP//MIj/+S+F/9YlcP/QJG3/0CRt/9Akbf/QJG3/1yZx//svhv//MIn/8SyA/9Ek
        bv/QJG3/0CRt/9Akbf/PJGyzyCNpDMojagD/MYoA/C+GXP8wiPn/MIj//zCI//8wiP/0LYH/0yVv/88k
        bf/XJnH/+i+F//8wiP//MIj//zCI//8wiP/5L4X/1iVw/9Akbf/QJG3/0CRt/9Akbf/VJXD/+C6E//8w
        iP/8L4b/2yd0/88kbf/QJG3/0CRt/9AkbffNJGxX0iRuAPgvhBn+MIfF/zCI//8wh///MIf//zCH/+Mp
        eP/PJG3/zyRt/9kmcv/8L4b//zCI//8wiP//MIj//zCI//kvhf/WJXD/0CRt/9Akbf/QJG3/0CRt/9Ml
        b//2LoP//zCI//8wiP/rK3z/0CRt/88kbf/PJG3/0CRt/88kbMHKI2oX/C+Gfv8wifv/Mo3//zaT//86
        m//9O53/3Sl3/88kbP/PJG3/3Sd0//4wh///MIj//zCI//8wiP//MIj/+S+F/9YlcP/QJG3/0CRt/9Ak
        bf/QJG3/0SRu//Itgf//MIj//zCI//s0jv/qLoL/4Sh2/9omcv/UJW//0SRt+s0ja3j+QKXg/0Ot//9H
        tP/9Srn//Uy9//9Apv/xLYD/0yVv/88kbP/gKHb//zCI//8wiP//MIj//zCI//8wiP/5L4X/1iVw/9Ak
        bf/QJG3/0CRt/9Akbf/QJG3/7yx///8wiP//Mov//0Su//89of//MIf//C+G//cuhP/xLID/6it83P1M
        vLD/TL7/7ky7/4JPrP+eTav/+zaT//8vh//kKXn/zyRs/+Qpef//MIj//zCI//8wiP//MIj//zCI//kv
        hf/WJXD/0CRt/9Akbf/QJG3/0CRt/9Akbf/rK3z//zCI//88n///TL3//0ay//8yjP//MIj//zCI//8w
        iP/9MIeu+0u6UP9MvfLZTbf/OlKi/zpQnv/PN43//zCI//kuhf/YJnL/6Cp7//8wiP//MIj//zCI//8w
        iP//MIj/+S+F/9YlcP/QJG3/0CRt/9Akbf/QJG3/zyRt/+cqef//NZL//0i3//9Mvv//S7z//zmZ//8w
        h///MIj//jCI8fovhU31SbYQ/ky8vvlMvP90UKn/J1Og/31Flv/7MIj//zCI/+8sf//uLH7//zCI//8w
        iP//MIj//zCI//8wiP/5L4X/1iVw/9Akbf/QJG3/0CRt/9Akbf/PJGz/4yp6//9Cq///TL7//0y9//9M
        vv//Q6z//zGJ//8wiP/9MIe88y6CD/9OwQD8S7tr/0y9/sdLsf83UZ//O0+e/883jf//MIj5/C+Gz/ov
        heX/MIj//zCI//8wiP//MIj//zCI//sxif/ZJ3T/zyRt/9Akbf/QJG3/0CRt/9AkbP/aK3vj/Uq5zP9M
        vfj/TL3//0y9//9Kuf//NpP//zCH/vsvhmn/MYsA+kq5APlKuSP/TLzd+T2h/3ZGl/8pU6D/a0eY4vIx
        h1r4LoMe/TCHwP8wiP//MIj//zCI//8wiP//OJj//0Or//Uxif/eJ3T/0CRt/9Akbf/QJG3/0CRt/88k
        bb7nPZ4c+0u6Uv1Lu6j+TLzp/0y+//8/pf/+MIfc+C+EIfgvhQDxSLMA2WDgAf1GsZH/NJHTpT2QoCxS
        oPErUqDrIVOfN/8nfRD+MIfR/zCI//8wh///Mo3//z+k//9Kuv//Sbf//zOO//wvhv/pKnv/1CVv/88k
        bf/QJG3/zyRtz8kjaRLTK3kA70exBvlKuDD8TLx//kay0vw1kY7DABQB7Sx+AIkoZQD8M44A9zubGPww
        iBg6S5YILVKfqC1SoP8qUp+c3TOGI/4wh9//MIj//zeV//9FsP//TL3//0y+//9Jt///M47//zCI//8w
        iP/0LYH/3Cd0/9Akbf/PJG3eyyNrHcsjawAAAAAA6EWsANJGqgD1R7EX9D2eFvtGsgAAAAAAAAAAAAAA
        AAAAAAAAJ0eLAC1SnwAsUZ5DLVKg8SpSoOqGQpJo/zKL6f8+ov//Srn//0y+//9Mvf//TL3//0m3//8z
        jv//MIj//zCI//8wiP/7L4b/5yp6/9Mlb+vLI2oszCNrAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAALFCbACtPmgctUp+oK1Kg/1xMnc36RK7s/0y9//9Mvf//TL3//0y9//9M
        vf//Sbf//zOO//8wiP//MIj//zCI//8wiP/+MIj/8i2B6N0ndS/fKHYAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnR4sALVKfAC1RnkMtUqDxMFKg8LNOsqX/TL3u/0y9//9M
        vf//TL3//0y9//9Jt///M47//zCI//8wiP//MIj//zCI//8wiPL+MIdt+C+FBPsvhgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAsUJsAK0+aBy1Sn6csUqD/LlGfoPVL
        um//TL3x/0y9//9Mvf//TL3//0m3//8zjv//MIj//zCI//8wiP//MIjy/DCHbfMuggT4L4QAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdIiwAtUp8ALVGeQi1S
        oPEsUqDsM1GePP9LvGj/TL3x/0y9//9Mvf//Sbf//zOO//8wiP//MIj//zCI8vwwh233LIMEQmJJAl9b
        UyJeWlIFXlpSAP9MvQD/TL0B/0y9JP9MvTD/TL0K/0y9ANAkbQLQJG0r0CRtOtAkbQzQJG0AAAAAACxQ
        mwArT5oHLVKfpy1SoP8sUZ+egEujCP1Lu2v/TL3x/0y9//9Jt///M47//zCI//8wiPL8MIdt9iuCBAAA
        AABtaF9NYFxUkl5aUgZeWlIA/0y9AP9MvQX/TL2u/0y96P9MvS//TL0A0CRtBtAkbbHQJG3t0CRtMdAk
        bQAAAAAAJ0eLAC1SnwAtUZ5CLVKg8S1SoO0rUZ06/xj/AfxLu2v/TL3x/0m3//8zjv//MIfy/DCHbfgp
        ggQ0sWMBlY+AT3dyZ+RfW1OFYl5WAFxYUAD/TL0A/0y9BP9MvYP/TL2v/0y9JP9MvQDQJG0E0CRtedAk
        baLPI2sh/1bRCP9MvU3/TL1G/0zBBSBPmActUp+nLVKg/y1Rn54aTpQE/0e3A/xMvGv/SLby/zSP8/wv
        hm3/IYIDiI96BpONfmWRi3zqbmlg7l1ZUTtgXFQAAAAAAP9MvQD/TL0A/0y9BP9MvQb/TL0B/0y9ANAk
        bQDQJG0B0CRtAv9W0QD/TL0f/0y94/9Mvc//TL0QYFCnAC1RnkItUqDxLVKg7SxRnjtCUaEA81PIBPxF
        r2f9NZJo/wBrA4+MfBeTjX6NlY+A9IJ9cP9iXlaZWFVOBV9bUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/0y9AP9MvRH/TL1//0y9c/9MvQmZTq0AK0+ZBy1Sn6YtUqD/LVGfoCpN
        lgVMRpwA/wDHAZt7ggaSjX1IlI5/w5WPf/2Nh3n/bGheyltXUCJfW1MAWFRNAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACdGiAAtUp8ALVGeQi1S
        n9UqT59+S12FEG1saxOPinwXk41+mJSOf/CUjn//kIp7/3RwZdZeWlI5Y15WAFxZUQAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACJI
        mwAbQ5sGQF6bJJqbnUWTk5OqdXV1r4J+dSqUjn/PlY9//4+Je/94c2jIX1tTN3dyZwBWU0wAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnZybAJycmhuenp2jnp6e8Z2dnf+CgoL4bGxtWJSNfmyMhnj1d3JnoV5aUiF0b2UAPjw3AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACLhXgAkIt8AI+JewaRi3wql5SOJp6ensqenp7/n5+f/5OTk/91dXW/eHZuKHNvZEpXU0wLYV1VAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACOiHoAjIZ4ApGLfBmSjH5Sk41+ppSOf+aSjH1inZ2dZZ6envyenp7/nJyc/35+ftRra2stb29vAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAj4l7CJCK
        fA6Ri30ckox9OJONfmSTjX6dlI5/1ZSOf/iUjn//lI5//5ONfsiWk4wtnJydx5mZmd+Uk5F9dXmBKT1S
        fgRLXYMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACRi31dk41+uJSOf9+Ujn/zlI5//pSOf/+Ujn//lI5//5SOf/6Ujn/uk41+uJKMfSiRkZExgoSHKClO
        nEcrUZ+cLFCdKCxQnQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJCKfA2SjH5Qk41+ppONftmTjX7tk41+7JONftuTjX63k41+f5KMfT+QinsOAAAAADBR
        lwArTpkFLVGehi1Rn38sUJwPLFCdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAwAAAA8AAAAOAAAABgAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAA
        AAGAAAABgAAAgcAAAPP4AAD/+AAA//wAAP/8AAH//gAAYQ4ABGEPAADhAAAA8ZCEAP/wggH//8AD///A
        B///wA///wAf//gAf/8AAH//AAB//wAYf/8=
</value>
  </data>
</root>